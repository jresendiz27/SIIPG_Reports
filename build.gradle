buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "org.grails.plugins:hibernate4:5.0.10"
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "net.researchgate:gradle-release:2.6.0"
    }
}

version "0.1"
group "siipg_reports"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
apply plugin: 'docker'
apply plugin: "net.researchgate.release"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://dl.bintray.com/stefanogualdi/plugins" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    runtime 'mysql:mysql-connector-java:5.1.36'
    runtime "com.h2database:h2"
    //
    compile "org.grails.plugins:rendering:2.0.1"
    runtime "org.springframework:spring-test:4.2.1.RELEASE"
    compile "org.grails.plugins:ckeditor:4.5.9.0"
    compile group: 'org.jfree', name: 'jfreechart', version: '1.0.19'
    compile "com.github.jsimone:webapp-runner:8.5.9.0"

}

assets {
    minifyJs = true
    minifyCss = true
}

task stage() {
    dependsOn clean, war
}
tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

//stage.dependsOn(copyToLib)
//
//task copyDockerFile(type: Copy, dependsOn: build) {
//    from 'src/main/docker'
//    into 'build/'
//}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = "${jar.baseName}".toLowerCase()
    dockerfile = file('Dockerfile')
}

release {
    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = true
        signTag = false
    }
}
